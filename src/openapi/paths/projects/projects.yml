collectionMethods:
  get:
    tags:
      - Projects
    summary: List all projects
    parameters:
        - $ref: '../../api.yml#/components/parameters/filters'
        - $ref: '../../api.yml#/components/parameters/skip'
        - $ref: '../../api.yml#/components/parameters/limit'
        - $ref: '../../api.yml#/components/parameters/sort'
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '../../api.yml#/components/schemas/Project'
                totalCount:
                  type: number
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'

  post:
    tags:
      - Projects
    summary: Create a new project
    requestBody:
      content:
        application/json:
          schema:
            title: CreateProject
            type: object
            required:
              - nameFr
            allOf:
              - $ref: '../../api.yml#/components/schemas/ProjectPayload'
    responses:
      '201':
        description: Created
        content:
          application/json:
            schema:
              $ref: '../../api.yml#/components/schemas/Project'
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'

documentMethods:
  get:
    tags:
      - Projects
    summary: Get a project by ID
    parameters:
      - $ref: '../../api.yml#/components/parameters/projectId'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../../api.yml#/components/schemas/Project'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '404':
        $ref: '../../api.yml#/components/responses/NotFound'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'

  delete:
    tags:
      - Projects
    summary: Delete a project by ID
    parameters:
      - $ref: '../../api.yml#/components/parameters/projectId'
    responses:
      '204':
        description: No content
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '404':
        $ref: '../../api.yml#/components/responses/NotFound'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'

  patch:
    tags:
      - Projects
    summary: Update a project by ID
    parameters:
      - $ref: '../../api.yml#/components/parameters/projectId'
    requestBody:
      content:
        application/json:
          schema:
              $ref: '../../api.yml#/components/schemas/ProjectPayload'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../../api.yml#/components/schemas/Project'
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '404':
        $ref: '../../api.yml#/components/responses/NotFound'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'

  put:
    tags:
      - Projects
    summary: Create a new project with ID
    parameters:
      - $ref: '../../api.yml#/components/parameters/projectId'
    requestBody:
      content:
          application/json:
            schema:
              $ref: '../../api.yml#/components/schemas/ProjectPayload'
    responses:
      '201':
        description: Created
        content:
          application/json:
            schema:
              $ref: '../../api.yml#/components/schemas/Project'
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'
