collectionMethods:
  get:
    tags:
      - Email types
    summary: List all email types
    parameters:
      - $ref: '../../api.yml#/components/parameters/filters'
      - $ref: '../../api.yml#/components/parameters/skip'
      - $ref: '../../api.yml#/components/parameters/limit'
      - $ref: '../../api.yml#/components/parameters/sort'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '../../api.yml#/components/schemas/EmailType'
                totalCount:
                  type: integer
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'

  post:
    tags:
      - Email types
    summary: Crate a new email type
    requestBody:
      content:
        application/json:
          schema:
            title: EmailTypePayload
            required:
              - usualName
            allOf:
              - $ref: '../../api.yml#/components/schemas/EmailTypePayload'
    responses:
      '201':
        description: Created
        content:
          application/json:
            schema:
              $ref: '../../api.yml#/components/schemas/EmailType'
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'

documentMethods:
  patch:
    tags:
      - Email types
    summary: Update an email type by ID
    parameters:
      - $ref: '../../api.yml#/components/parameters/emailTypeId'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../../api.yml#/components/schemas/EmailTypePayload'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../../api.yml#/components/schemas/EmailType'
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '404':
        $ref: '../../api.yml#/components/responses/NotFound'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'
  
  put:
    tags:
      - Email types
    summary: create an email type with ID
    parameters:
      - $ref: '../../api.yml#/components/parameters/emailTypeId'
    requestBody:
      content:
        application/json:
          schema:
            title: EmailTypePayload
            required:
              - usualName
            allOf:
              - $ref: '../../api.yml#/components/schemas/EmailTypePayload'
    responses:
      '201':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../../api.yml#/components/schemas/EmailType'
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '404':
        $ref: '../../api.yml#/components/responses/NotFound'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'

  delete:
    tags:
      - Email types
    summary: Delete an email type by ID
    parameters:
      - $ref: '../../api.yml#/components/parameters/emailTypeId'
    responses:
      '204':
        description: No content
      '400':
        $ref: '../../api.yml#/components/responses/BadRequest'
      '401':
        $ref: '../../api.yml#/components/responses/Unauthorized'
      '403':
        $ref: '../../api.yml#/components/responses/Forbidden'
      '404':
        $ref: '../../api.yml#/components/responses/NotFound'
      '500':
        $ref: '../../api.yml#/components/responses/ServerError'
