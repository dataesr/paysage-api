name: Production deployment

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  DEPLOYMENT: paysage-api # Must match k8s deployment name
  DEPLOYMENT_NAMESPACE: paysage # Must match k8s deployment namespace
  DEPLOYMENT_URL: https://docs.paysage.dataesr.ovh
  MM_NOTIFICATION_CHANNEL: bots

jobs:
  publish-ghcr:
    name: Publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: 🏁 Checkout
        uses: actions/checkout@v4

      - name: 🔑 Log into ghcr.io
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
        
      - name: 🏷️ Get tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: 🐋 Build Docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker build -t $IMAGE_ID:${{ steps.tag.outputs.tag }} -t $IMAGE_ID:latest .

      - name: 📦 Push Docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker push --all-tags $IMAGE_ID

  release:
    name: Create new Github release
    runs-on: ubuntu-latest
    needs: publish-ghcr
    steps:
      - name: 🏁 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏷️ Get tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config_file: .github/config/changelog.cjs

      - name: 📦 Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          body: "${{ steps.changelog.outputs.changes }}"

  deploy-docs:
    name: Deploy documentation
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Build docs
        run: |
          npm i swagger-cli
          npm run docs:build
      - name: Push to stoplight
        run: |
          cd docs
          npx @stoplight/cli@5 push --ci-token ${{ secrets.STOPLIGHT_TOKEN }} --url https://dataesr.stoplight.io/

  deploy:
    name: Update deployment
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Deploy to Cluster
        id: kubectl-deploy
        uses: dataesr/kubectl-deploy@v1.1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DOAD_PROD }}
        with:
          namespace: ${{ env.DEPLOYMENT_NAMESPACE }}
          restart: ${{ env.DEPLOYMENT }}

  notify:
    needs:
    - deploy
    - deploy-docs
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: dataesr/mm-notifier-action@v1.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          mattermost_webhook_url: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          mattermost_channel: ${{ env.MM_NOTIFICATION_CHANNEL}}
          deployment_url: ${{ env.DEPLOYMENT_URL }}