name: Production deployment

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  # Must match k8s deployment name
  DEPLOYMENT: paysage-api
  DEPLOYMENT_NAMESPACE: paysage
  DEPLOYMENT_URL: https://docs.paysage.dataesr.ovh
  SLACK_NOTIFICATION_CHANNEL: '#paysage-bot'

jobs:
  publish-ghcr:
    name: Publish docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log into registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build -f Dockerfile -t ${{ github.repository }} .

      - name: Get Tag
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag ${{ github.repository }} $IMAGE_ID:latest
          docker tag ${{ github.repository }} $IMAGE_ID:${{ steps.version.outputs.version }}
          docker push $IMAGE_ID:latest
          docker push $IMAGE_ID:${{ steps.version.outputs.version }}

  release:
    name: Release new version
    runs-on: ubuntu-latest
    needs: publish-ghcr
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get version
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}
      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config_file: .github/config/changelog.cjs
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          body: "${{ steps.changelog.outputs.changes }}"

  deploy-docs :
    name: Deploy documentation
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3
      - name: Build docs
        run: |
          npm i swagger-cli
          npm run docs:build
      - name: Push to stoplight
        run: |
          cd docs
          npx @stoplight/cli@5 push --ci-token ${{ secrets.STOPLIGHT_TOKEN }} --url https://dataesr.stoplight.io/

  deploy:
    name: Update deployment
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Deploy to Cluster
        id: kubectl-deploy
        uses: dataesr/kubectl-deploy@v1.1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DOAD_PROD }}
        with:
          namespace: ${{ env.DEPLOYMENT_NAMESPACE }}
          restart: ${{ env.DEPLOYMENT }}

  notify:
    needs: deploy
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: dataesr/slack-notifier-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          slack_channel: ${{ env.SLACK_NOTIFICATION_CHANNEL}}
          deployment_url: ${{ env.DEPLOYMENT_URL }}